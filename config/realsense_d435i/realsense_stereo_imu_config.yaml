%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 0         
num_of_cam: 2  

image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/kirill/output/"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480

# GPU acceleration
use_gpu         : 0
use_gpu_acc_flow: 0
use_gpu_ceres   : 0
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.99993972587885, 0.00471959427028958, 0.00991312459582052, -0.00718302356669691,
      -0.00468397622610073, 0.999982502538322, -0.00361316812608049, 0.00629688746408727,
      -0.00993000382888825, 0.00356651750561393, 0.999944335939176, 0.019028183191421,
      0, 0, 0, 1]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.999967029269493, 0.00476599649684953, 0.00657462176375684, 0.0427276380146512,
      -0.00474791930292782, 0.999984913049796, -0.00276241471985717, 0.00604709659241631,
      -0.00658768823164337, 0.00273110786744431, 0.999974571383482, 0.0188109717288225,
      0, 0, 0, 1]

#Multiple thread support
multiple_thread: 12

#feature traker paprameters
max_cnt: 80            # max feature number in feature tracking
min_dist: 40           # min distance between two features 
freq: 6                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.01  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.9          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.09         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.009         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0009       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.00                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/kirill/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
